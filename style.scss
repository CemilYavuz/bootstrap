@import "./node_modules/bootstrap/scss/bootstrap.scss" ;


//variable scope => 1. global (root) / 2. local
// :root{
//     --orange: orange;
//     --blue: blue;
//     --font-size-h1: font-size:16px;
// }

// button{
//     --button-color: yellow;
//     background-color: var(--button-color);
// }

// Beispiel 2 var(--name: fallback)
// .box{
//     // Falls erste nicht gibt benutze die zweite
//     background-color: var(--a, #ccc);
//     padding: 10px;
//     margin: 10px;
// }

// .special{
//     --a:#f90;
// }

//*****  SASS  **************
$bg-color:#0e7490;
$myFontSize: 18px;
$myWidth: 400px;
$size: 1em;
$color: #fb7185;



body{
    background-color: $bg-color;
    font-size: $myFontSize;
    color: $color;
}

#container{
    //man kann auch mathematische Aufgaben benutzen
    margin: $size *3;
    width: $myWidth / 2;
}

//*** Beispiel 3 SASS variable scope  ****
p{
    //*** Mit !global kann ich die VARIABLE AUF GLOBAL Ã„NDERN
    // $color: lightgreen !global;
    $color: black;
    color: $color;
}

span{
    color: $color;
}

//*** Beispiel 4 Nested Rules  ****
// .myClass li{
//     list-style: none;
// }
.myClass{
    display: flex;
    justify-content: space-between;

    li{
        list-style: none;
        background-color: antiquewhite;
    }
    &:hover li{
        background-color: black;
    }
}

//*** Beispiel 4.1 Nested Rules  ****
.nested{
    background-color: #fb7185;
    p{
        color: white;
    }
}

//*** Beispiel 4.2 Nested Rules  ****
nav{
    ul{
        margin: 0;
        padding: 0; 
        list-style: none;
    }
    li{
        display: inline-block;
        
    }
    a{
        text-decoration: none;
        color: white;
    }
}

//*** Beispiel 4.3 Nested Rules  ****
ul > li{
    list-style: none;
}
h2 + p{
    border: 2px solid;
}

ul{
    >{
        list-style: none;
    }
}

h2{
    +p{
        border: 2px solid;
    }
    +a{
        color: red;
    }
}


// .example-1{
//     font-size: 1rem;
//     transition-property: font-size;
//     transition-duration: 1s;
//     transition-delay: 2s;
//     // transition: font-size 1s 2s;   
// }

.example-1{
    font-size: 1rem;
    transition:{
        property: font-size;
        duration: 1s;
        delay: 2s;
    }
    // &hover:{
    //     font-size: 2rem;
    // }
}

// .container{
//     display: flex;
//     flex-direction: column;
//     flex-wrap: nowrap;
// }

.container{
    display: flex;
    flex: {
        direction: column;
        wrap: nowrap;
    }
    align-items: center;
    padding: 10px;
}


.example-3{
    font:{
        family: Helvetica, sans-serif;
        size: 19px;
        weight: bold;
    }
}

.example-4{
    text:{
        align: center;
        transform: lowercase;
        overflow: hidden;
    }
}


$colors: (
    main:#facc15,
    second: #84cc16,
)
// $border-default: 10px solid map-get($colors,second);

// .lastClass {
//     // border-bottom: $border-default;
//     border-bottom: $border-default;
//     p{
//         color: $colors map-get($colors, second)
//     }
// }


// @IMPORT AND @EXTEND AND MIXIN AND PARTIAL